{"version":3,"sources":["webpack:///./src/templates/taxonomy-list.js"],"names":["Container","styled","div","rhythm","TaxonomyList","TaxonomyItemContainer","TaxonomyItem","prefix","name","slug","count","to","TaxonomyListTemplate","location","pageContext","title","data","taxonomy","taxonomyList","map","item","key","posts","length","pageQuery"],"mappings":"gOASMA,EAAYC,IAAOC,IAAV,+EAAGD,CAAH,gBACHE,YAAO,KAGbC,EAAeH,IAAOC,IAAV,kFAAGD,CAAH,qDAKZI,EAAwBJ,IAAOC,IAAV,2FAAGD,CAAH,8BACfE,YAAO,IACJA,YAAO,IAGhBG,EAAe,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,OAAQC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAC1C,OACE,kBAACL,EAAD,KACE,kBAAC,OAAD,CAAMM,GAAE,IAAMJ,EAAN,IAAgBE,GACrBD,EACD,kBAAC,IAAD,KAAUE,MA0BHE,UApBc,SAAC,GAAoC,EAAlCC,SAAmC,IAAzBC,EAAwB,EAAxBA,YAChCC,GADwD,EAAXC,KACXF,EAAlCC,OAAOE,EAA2BH,EAA3BG,SAAUC,EAAiBJ,EAAjBI,aACzB,OACE,kBAAClB,EAAD,KACE,4BAAKe,GACL,kBAACX,EAAD,KACGc,EAAaC,KAAI,SAAAC,GAAI,OACpB,kBAACd,EAAD,CACEe,IAAKD,EAAKX,KACVF,OAAQU,EACRT,KAAMY,EAAKZ,KACXC,KAAMW,EAAKX,KACXC,MAAOU,EAAKE,MAAMC,eAWvB,IAAMC,EAAS","file":"component---src-templates-taxonomy-list-js-ce8ec96f16b1770aab44.js","sourcesContent":["import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\n\nimport Counter from \"../components/Counter\"\n\nimport styled from \"styled-components\"\n\nimport { rhythm, scale } from \"../utils/typography\"\n\nconst Container = styled.div`\n  margin: ${rhythm(0.1)};\n`\n\nconst TaxonomyList = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n`\nconst TaxonomyItemContainer = styled.div`\n  margin: ${rhythm(0.2)};\n  min-width: ${rhythm(7)};\n`\n\nconst TaxonomyItem = ({ prefix, name, slug, count }) => {\n  return (\n    <TaxonomyItemContainer>\n      <Link to={`/${prefix}/${slug}`}>\n        {name}\n        <Counter>{count}</Counter>\n      </Link>\n    </TaxonomyItemContainer>\n  )\n}\n\nconst TaxonomyListTemplate = ({ location, pageContext, data }) => {\n  const { title, taxonomy, taxonomyList } = pageContext\n  return (\n    <Container>\n      <h1>{title}</h1>\n      <TaxonomyList>\n        {taxonomyList.map(item => (\n          <TaxonomyItem\n            key={item.slug}\n            prefix={taxonomy}\n            name={item.name}\n            slug={item.slug}\n            count={item.posts.length}\n          />\n        ))}\n      </TaxonomyList>\n    </Container>\n  )\n}\n\nexport default TaxonomyListTemplate\n\n\nexport const pageQuery = graphql`\n  query queryTaxonomyList {\n    site {\n      siteMetadata {\n        title\n        author {\n          name\n        }\n      }\n    }\n  }\n`"],"sourceRoot":""}